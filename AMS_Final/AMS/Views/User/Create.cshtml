@model DataAcessLayer.ViewModels.Users

@{
    ViewBag.Title = "Create";
}

<h2>Create User</h2>


@Html.AntiForgeryToken()

<div class="form-horizontal">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <span id="spanErrorMessage"class="field-validation-valid text-danger"
          data-valmsg-for="StudentName"
          data-valmsg-replace="true">
    </span>
    <div>
        @Html.HiddenFor(m => m.user.Id, new { @id = "rdclienttype" })
    </div>


    <div class="row">
        <div class="col-md-6 col-sm-12">


            @Html.LabelFor(model => model.user.Name, htmlAttributes: new { @class = "control-label " })
            <div class="form-group">
                @Html.EditorFor(model => model.user.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-12">


            @Html.LabelFor(model => model.user.Title, htmlAttributes: new { @class = "control-label" })
            <div class="form-group">
                @Html.EditorFor(model => model.user.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user.Title, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
       
        <div class="col-md-6 col-sm-12">
            @Html.LabelFor(model => model.user.UserCode, htmlAttributes: new { @class = "control-label " })
            <div class="form-group">
                @Html.EditorFor(model => model.user.UserCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter UserCode", @maxlength = "5" } })
                @Html.ValidationMessageFor(model => model.user.UserCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-12">
            @Html.LabelFor(model => model.user.Password, htmlAttributes: new { @class = "control-label " })
            <div class="form-group">
                @Html.EditorFor(model => model.user.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Password", @maxlength = "6" } })
                @Html.ValidationMessageFor(model => model.user.Password, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 col-sm-12">

            @Html.LabelFor(model => model.user.Email, htmlAttributes: new { @class = "control-label" })
            <div class="form-group">
                @Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6 col-sm-12">

            @Html.LabelFor(model => model.user.Profession, htmlAttributes: new { @class = "control-label " })
            <div class="form-group">
                @Html.EditorFor(model => model.user.Profession, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.user.Profession, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-6 col-sm-12">           
            <div class="form-group">
                @Html.LabelFor(model => model.UserRoles, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(m => m.UserRoles, new SelectList(Model.UserRoles, "RoleId", "RoleName"), "--Select Role--")
                @Html.ValidationMessageFor(model => model.UserRoles, "", new { @class = "text-danger" })
                       </div>
        </div>
    </div>



    <div class="row">
        <div class="col-md-6 col-sm-12">
            <div class="form-group">              
                    <input type="button" id="buttonAddUser" value="Save" onclick="addAndList()" class="btn btn-primary btn-lg" />               
            </div>
           
        </div>
        <div class="col-md-6 col-sm-12">
            <div id="erorMessageSummary" style="font-weight:300;color: red;">
                <p>
                </p>
            </div>
        </div>

    </div>
</div>
<div id="divUserList">
    @{
        Html.RenderPartial("_userList", Model.userList);
    }

</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<div class="modal fade" id="deleteModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Delete Confirmation</h4>
            </div>
            <div class="modal-body">
                <input type="hidden" id="hdnDelUserId" />
                <p>Do you want to delete this record?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button id="btnDelYes" type="button" class="btn btn-default" data-dismiss="modal" onclick="DeleteUser();" >Yes</button>
            </div>
        </div>
    </div>

    
</div>

@section Scripts {

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/bootbox.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/jquery")*@

    <script src="@Url.Content("~/Scripts/CreateList.js")"></script>
}
